function [resultMatrix] = createFit(te, means, StartPoint, noise)
%CREATEFIT(TE,MEANS1)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : te
%      Y Output: means1
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.
% 
%  StartPoint = [amp relax] with no comma in between 
%
%  Auto-generated by MATLAB on 30-Sep-2015 21:16:08
%  2015-09-30 Edited to produce desired outputs 


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( te, means );

% Set up fittype and options.
ft = fittype( 'a*exp(-x/b)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [100 10];
if (~exist('StartPoint','var') || isempty(StartPoint)), StartPoint=[100 10]; end % If no starting values entered, use default input

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Calculate Confidence Interval
ci = confint(fitresult, 0.95)
a_ci = fitresult.a - ci(1,1);
b_ci = fitresults.b - ci(2,1);

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'means1 vs. te', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel te
ylabel means1
grid on

%Calculate SNR
if ((~exist('noise','var') || isempty(noise)), SNR = ('No noise value provided. SNR calculation not possible.')
else SNR = max(yData)/noise; 
end


% Result Matrix
resultMatrix = [fitresult.a a_ci fitresult.b b_ci gof.rsquare gof.sse gof.rmse SNR];
columnHeader = ['A' 'A Conf Int' 'B' 'B Conf Int' 'Rsquare' 'SS



